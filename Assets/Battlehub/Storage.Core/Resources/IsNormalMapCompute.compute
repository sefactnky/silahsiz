// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma kernel CSInit

Texture2D<float4> InputImage;
RWStructuredBuffer<int> ResultBuffer;

[numthreads(1, 1, 1)]
void CSInit(uint3 id : SV_DispatchThreadID)
{
    ResultBuffer[0] = 0;
}

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float4 col = InputImage[id.xy];

    float2 n = col.ag * 2 - 1;
    float z = max(1 - dot(n, n), 0);
    z = sqrt(z);

    float3 normal = float3(n.x, z, n.y);
    if (abs(1 - length(normal)) < 0.0001)
    {
        InterlockedAdd(ResultBuffer[0], 1);
    }
}